import { createSlice } from "@reduxjs/toolkit";

export const addPrerequisitionReducer = createSlice(
    { name:'AddProduct',
       initialState:{
        AddPincode:{},
        AddCatagory:{},
        AddCarousel:{},
        psuccess:false,
        ploading:false,
        perror:null,
        csuccess:false,
        cloading:false,
        cerror:null,
        carsuccess:false,
        carloading:false,
        carerror:null
       },
       reducers:{
        ADD_CATAGORY_REQUEST(state){
        return{
            ...state,
            ccloading:true
            };
          },
        ADD_CATAGORY_SUCCESS(state,action){
            return{
            ...state,
            cloading:false,
            csuccess:action.payload.success,
            AddCatagory:action.payload.catagories
            }
          },
        ADD_CATAGORY_RESET(state,action){
            return{
              ...state,
              csuccess:false,
            }
           
          },
        ADD_CATAGORY_FAIL(state,action){
            return{
            cloading:false,
            cerror:action.payload
            }
          },
          CLEAR_AACERRORS:(state)=>{
            return{
            ...state,
            cerror:null
            }
          },
          ADD_PINCODE_REQUEST(state){
            return{
                ...state,
                ploading:true
                };
              },
            ADD_PINCODE_SUCCESS(state,action){
                return{
                ...state,
                ploading:false,
                psuccess:action.payload.success,
                AddPincode:action.payload.pincodes
                }
              },
            ADD_PINCODE_RESET(state,action){
                return{
                  ...state,
                  psuccess:false,
                }
               
              },
            ADD_PINCODE_FAIL(state,action){
                return{
                ploading:false,
                perror:action.payload
                }
              },
              CLEAR_AAPERRORS:(state)=>{
                return{
                ...state,
                perror:null
                }
              },
              ADD_CAROUSEL_REQUEST(state){
                return{
                    ...state,
                    carloading:true
                    };
                  },
                ADD_CAROUSEL_SUCCESS(state,action){
                    return{
                    ...state,
                    carloading:false,
                    carsuccess:action.payload.success,
                    AddCarousel:action.payload.carousels
                    }
                  },
                ADD_CAROUSEL_RESET(state,action){
                    return{
                      ...state,
                      carsuccess:false,
                    }
                   
                  },
                ADD_CAROUSEL_FAIL(state,action){
                    return{
                    carloading:false,
                    carerror:action.payload
                    }
                  },
                  CLEAR_AACARERRORS:(state)=>{
                    return{
                    ...state,
                    carerror:null
                    }
                  }
        }
    })
        export const {ADD_CATAGORY_FAIL,ADD_CATAGORY_REQUEST,ADD_CATAGORY_SUCCESS,ADD_CATAGORY_RESET,CLEAR_AACERRORS,ADD_PINCODE_FAIL,ADD_PINCODE_REQUEST,ADD_PINCODE_SUCCESS,ADD_PINCODE_RESET,CLEAR_AAPERRORS,ADD_CAROUSEL_FAIL,ADD_CAROUSEL_REQUEST,ADD_CAROUSEL_SUCCESS,ADD_CAROUSEL_RESET,CLEAR_AACARERRORS}=addPrerequisitionReducer.actions
        export default addPrerequisitionReducer.reducer